// Code generated by go generate; DO NOT EDIT.

package brightbox

import (
	"path"
	"testing"

	"gotest.tools/v3/assert"
)

func TestCloudIPs(t *testing.T) {
	instance := testAll(
		t,
		(*Client).CloudIPs,
		"CloudIP",
		"cloud_ips",
		"CloudIPs",
	)
	assert.Equal(t, instance.ID, "cip-k4a25")
}

func TestCloudIP(t *testing.T) {
	instance := testInstance(
		t,
		(*Client).CloudIP,
		"CloudIP",
		path.Join("cloud_ips", "cip-k4a25"),
		"cloud_ip",
		"cip-k4a25",
	)
	assert.Equal(t, instance.ID, "cip-k4a25")
}

func TestCreateCloudIP(t *testing.T) {
	newResource := CloudIPOptions{}
	instance := testModify(
		t,
		(*Client).CreateCloudIP,
		newResource,
		"cloud_ip",
		"POST",
		path.Join("cloud_ips"),
		"{}",
	)
	assert.Equal(t, instance.ID, "cip-k4a25")
}

func TestUpdateCloudIP(t *testing.T) {
	updatedResource := CloudIPOptions{ID: "cip-k4a25"}
	instance := testModify(
		t,
		(*Client).UpdateCloudIP,
		updatedResource,
		"cloud_ip",
		"PUT",
		path.Join("cloud_ips", updatedResource.ID),
		"{}",
	)
	assert.Equal(t, instance.ID, updatedResource.ID)
}

func TestDestroyCloudIP(t *testing.T) {
	deletedResource := testModify(
		t,
		(*Client).DestroyCloudIP,
		"cip-k4a25",
		"cloud_ip",
		"DELETE",
		path.Join("cloud_ips", "cip-k4a25"),
		"",
	)
	assert.Equal(t, deletedResource.ID, "cip-k4a25")
}
