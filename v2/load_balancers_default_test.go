// Code generated by go generate; DO NOT EDIT.

package brightbox

import (
	"path"
	"testing"

	"gotest.tools/v3/assert"
)

func TestLoadBalancers(t *testing.T) {
	instance := testAll[LoadBalancer](
		t,
		(*Client).LoadBalancers,
		"LoadBalancer",
		"load_balancers",
		"LoadBalancers",
	)
	assert.Equal(t, instance.ID, "lba-1235f")
}

func TestLoadBalancer(t *testing.T) {
	instance := testInstance[LoadBalancer](
		t,
		(*Client).LoadBalancer,
		"LoadBalancer",
		path.Join("load_balancers", "lba-1235f"),
		"load_balancer",
		"lba-1235f",
	)
	assert.Equal(t, instance.ID, "lba-1235f")
}

func TestCreateLoadBalancer(t *testing.T) {
	newResource := LoadBalancerOptions{}
	instance := testModify[LoadBalancer, LoadBalancerOptions](
		t,
		(*Client).CreateLoadBalancer,
		&newResource,
		"load_balancer",
		"POST",
		path.Join("load_balancers"),
		"{}",
	)
	assert.Equal(t, instance.ID, "lba-1235f")
}

func TestUpdateLoadBalancer(t *testing.T) {
	updatedResource := LoadBalancerOptions{ID: "lba-1235f"}
	instance := testModify[LoadBalancer, LoadBalancerOptions](
		t,
		(*Client).UpdateLoadBalancer,
		&updatedResource,
		"load_balancer",
		"PUT",
		path.Join("load_balancers", updatedResource.ID),
		"{}",
	)
	assert.Equal(t, instance.ID, updatedResource.ID)
}

func TestDestroyLoadBalancer(t *testing.T) {
	testCommand(
		t,
		(*Client).DestroyLoadBalancer,
		"lba-1235f",
		"DELETE",
		path.Join("load_balancers", "lba-1235f"),
	)
}

func TestLockLoadBalancer(t *testing.T) {
	testCommand(
		t,
		(*Client).LockLoadBalancer,
		"lba-1235f",
		"PUT",
		path.Join("load_balancers", "lba-1235f", "lock_resource"),
	)
}

func TestUnlockLoadBalancer(t *testing.T) {
	testCommand(
		t,
		(*Client).UnlockLoadBalancer,
		"lba-1235f",
		"PUT",
		path.Join("load_balancers", "lba-1235f", "unlock_resource"),
	)
}
