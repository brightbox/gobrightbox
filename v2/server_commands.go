// Code generated by generate_server_commands; DO NOT EDIT.

package brightbox

import "context"
import "path"

// StartServer will issue a start request for the server to become active.
func (c *Client) StartServer(ctx context.Context, identifier string) error {
	return APIPostCommand(ctx, c, path.Join(ServerAPIPath, identifier, "start"))
}

// StopServer will issue a stop request for the server to become inactve.
func (c *Client) StopServer(ctx context.Context, identifier string) error {
	return APIPostCommand(ctx, c, path.Join(ServerAPIPath, identifier, "stop"))
}

// RebootServer issues a "soft" reboot to the server, however the OS make ignore it. The console remains connected.
func (c *Client) RebootServer(ctx context.Context, identifier string) error {
	return APIPostCommand(ctx, c, path.Join(ServerAPIPath, identifier, "reboot"))
}

// ResetServer issues a "hard" reboot to the server which cannot be ignored by the OS. The console remains connected.
func (c *Client) ResetServer(ctx context.Context, identifier string) error {
	return APIPostCommand(ctx, c, path.Join(ServerAPIPath, identifier, "reset"))
}

// ShutdownServer will issue a safe shutdown request to the server
func (c *Client) ShutdownServer(ctx context.Context, identifier string) error {
	return APIPostCommand(ctx, c, path.Join(ServerAPIPath, identifier, "shutdown"))
}
