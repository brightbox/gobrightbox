// Code generated by go generate; DO NOT EDIT.

package brightbox

import (
	"path"
	"testing"
	"time"

	"gotest.tools/v3/assert"
)

func TestCollaborations(t *testing.T) {
	instance := testAll(
		t,
		(*Client).Collaborations,
		"Collaboration",
		"collaborations",
		"Collaborations",
	)
	assert.Equal(t, instance.ID, "col-klek3")
}

func TestCollaboration(t *testing.T) {
	instance := testInstance(
		t,
		(*Client).Collaboration,
		"Collaboration",
		path.Join("collaborations", "col-klek3"),
		"collaboration",
		"col-klek3",
	)
	assert.Equal(t, instance.ID, "col-klek3")
}

func TestCreateCollaboration(t *testing.T) {
	newResource := CollaborationOptions{}
	instance := testModify(
		t,
		(*Client).CreateCollaboration,
		newResource,
		"collaboration",
		"POST",
		path.Join("collaborations"),
		"{}",
	)
	assert.Equal(t, instance.ID, "col-klek3")
}

func TestDestroyCollaboration(t *testing.T) {
	deletedResource := testModify(
		t,
		(*Client).DestroyCollaboration,
		"col-klek3",
		"collaboration",
		"DELETE",
		path.Join("collaborations", "col-klek3"),
		"",
	)
	assert.Equal(t, deletedResource.ID, "col-klek3")
}

func TestCollaborationCreatedAtUnix(t *testing.T) {
	tm := time.Date(2009, time.November, 10, 23, 0, 0, 0, time.UTC)
	target := Collaboration{CreatedAt: &tm}
	assert.Equal(t, target.CreatedAtUnix(), tm.Unix())
}
