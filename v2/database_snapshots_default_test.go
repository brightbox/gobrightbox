// Code generated by go generate; DO NOT EDIT.

package brightbox

import (
	"path"
	"testing"

	"gotest.tools/v3/assert"
)

func TestDatabaseSnapshots(t *testing.T) {
	instance := testAll[DatabaseSnapshot](
		t,
		(*Client).DatabaseSnapshots,
		"DatabaseSnapshot",
		"database_snapshots",
		"DatabaseSnapshots",
	)
	assert.Equal(t, instance.ID, "dbi-12345")
}

func TestDatabaseSnapshot(t *testing.T) {
	instance := testInstance[DatabaseSnapshot](
		t,
		(*Client).DatabaseSnapshot,
		"DatabaseSnapshot",
		path.Join("database_snapshots", "dbi-12345"),
		"database_snapshot",
		"dbi-12345",
	)
	assert.Equal(t, instance.ID, "dbi-12345")
}

func TestUpdateDatabaseSnapshot(t *testing.T) {
	updatedResource := DatabaseSnapshotOptions{ID: "dbi-12345"}
	instance := testModify[DatabaseSnapshot, *DatabaseSnapshotOptions](
		t,
		(*Client).UpdateDatabaseSnapshot,
		&updatedResource,
		"database_snapshot",
		"PUT",
		path.Join("database_snapshots", updatedResource.ID),
		"{}",
	)
	assert.Equal(t, instance.ID, updatedResource.ID)
}

func TestDestroyDatabaseSnapshot(t *testing.T) {
	deletedResource := testModify[DatabaseSnapshot, string](
		t,
		(*Client).DestroyDatabaseSnapshot,
		"dbi-12345",
		"database_snapshot",
		"DELETE",
		path.Join("database_snapshots", "dbi-12345"),
		"",
	)
	assert.Equal(t, deletedResource.ID, "dbi-12345")
}

func TestLockDatabaseSnapshot(t *testing.T) {
	lockedResource := testModify[DatabaseSnapshot, string](
		t,
		(*Client).LockDatabaseSnapshot,
		"dbi-12345",
		"database_snapshot",
		"PUT",
		path.Join("database_snapshots", "dbi-12345", "lock_resource"),
		"",
	)
	assert.Equal(t, lockedResource.ID, "dbi-12345")
}

func TestUnlockDatabaseSnapshot(t *testing.T) {
	unlockedResource := testModify[DatabaseSnapshot, string](
		t,
		(*Client).UnlockDatabaseSnapshot,
		"dbi-12345",
		"database_snapshot",
		"PUT",
		path.Join("database_snapshots", "dbi-12345", "unlock_resource"),
		"",
	)
	assert.Equal(t, unlockedResource.ID, "dbi-12345")
}
