// Code generated by go generate; DO NOT EDIT.

package brightbox

import (
	"path"
	"testing"

	"gotest.tools/v3/assert"
)

func TestImages(t *testing.T) {
	instance := testAll[Image](
		t,
		(*Client).Images,
		"Image",
		"images",
		"Images",
	)
	assert.Equal(t, instance.ID, "img-3ikco")
}

func TestImage(t *testing.T) {
	instance := testInstance[Image](
		t,
		(*Client).Image,
		"Image",
		path.Join("images", "img-3ikco"),
		"image",
		"img-3ikco",
	)
	assert.Equal(t, instance.ID, "img-3ikco")
}

func TestCreateImage(t *testing.T) {
	newResource := ImageOptions{}
	instance := testModify[Image, *ImageOptions](
		t,
		(*Client).CreateImage,
		&newResource,
		"image",
		"POST",
		path.Join("images"),
		"{}",
	)
	assert.Equal(t, instance.ID, "img-3ikco")
}

func TestUpdateImage(t *testing.T) {
	updatedResource := ImageOptions{ID: "img-3ikco"}
	instance := testModify[Image, *ImageOptions](
		t,
		(*Client).UpdateImage,
		&updatedResource,
		"image",
		"PUT",
		path.Join("images", updatedResource.ID),
		"{}",
	)
	assert.Equal(t, instance.ID, updatedResource.ID)
}

func TestDestroyImage(t *testing.T) {
	testCommand(
		t,
		(*Client).DestroyImage,
		"img-3ikco",
		"DELETE",
		path.Join("images", "img-3ikco"),
	)
}

func TestLockImage(t *testing.T) {
	testCommand(
		t,
		(*Client).LockImage,
		"img-3ikco",
		"PUT",
		path.Join("images", "img-3ikco", "lock_resource"),
	)
}

func TestUnlockImage(t *testing.T) {
	testCommand(
		t,
		(*Client).UnlockImage,
		"img-3ikco",
		"PUT",
		path.Join("images", "img-3ikco", "unlock_resource"),
	)
}
