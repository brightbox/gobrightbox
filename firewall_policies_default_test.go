// Code generated by go generate; DO NOT EDIT.

package brightbox

import (
	"path"
	"testing"
	"time"

	"gotest.tools/v3/assert"
)

func TestFirewallPolicies(t *testing.T) {
	instance := testAll(
		t,
		(*Client).FirewallPolicies,
		"FirewallPolicy",
		"firewall_policies",
		"FirewallPolicies",
	)
	assert.Equal(t, instance.ID, "fwp-j3654")
}

func TestFirewallPolicy(t *testing.T) {
	instance := testInstance(
		t,
		(*Client).FirewallPolicy,
		"FirewallPolicy",
		path.Join("firewall_policies", "fwp-j3654"),
		"firewall_policy",
		"fwp-j3654",
	)
	assert.Equal(t, instance.ID, "fwp-j3654")
}

func TestCreateFirewallPolicy(t *testing.T) {
	newResource := FirewallPolicyOptions{}
	instance := testModify(
		t,
		(*Client).CreateFirewallPolicy,
		newResource,
		"firewall_policy",
		"POST",
		path.Join("firewall_policies"),
		"{}",
	)
	assert.Equal(t, instance.ID, "fwp-j3654")
}

func TestUpdateFirewallPolicy(t *testing.T) {
	updatedResource := FirewallPolicyOptions{ID: "fwp-j3654"}
	instance := testModify(
		t,
		(*Client).UpdateFirewallPolicy,
		updatedResource,
		"firewall_policy",
		"PUT",
		path.Join("firewall_policies", updatedResource.ID),
		"{}",
	)
	assert.Equal(t, instance.ID, updatedResource.ID)
}

func TestDestroyFirewallPolicy(t *testing.T) {
	deletedResource := testModify(
		t,
		(*Client).DestroyFirewallPolicy,
		"fwp-j3654",
		"firewall_policy",
		"DELETE",
		path.Join("firewall_policies", "fwp-j3654"),
		"",
	)
	assert.Equal(t, deletedResource.ID, "fwp-j3654")
}

func TestFirewallPolicyCreatedAtUnix(t *testing.T) {
	tm := time.Date(2009, time.November, 10, 23, 0, 0, 0, time.UTC)
	target := FirewallPolicy{CreatedAt: &tm}
	assert.Equal(t, target.CreatedAtUnix(), tm.Unix())
}
