// Code generated by go generate; DO NOT EDIT.

package brightbox

import "context"
import "path"

const (
	// imageAPIPath returns the relative URL path to the Image endpoint
	imageAPIPath = "images"
)

// Images returns the collection view for Image
func (c *Client) Images(ctx context.Context) ([]Image, error) {
	return apiGetCollection[[]Image](ctx, c, imageAPIPath)
}

// Image retrieves a detailed view of one resource
func (c *Client) Image(ctx context.Context, identifier string) (*Image, error) {
	return apiGet[Image](ctx, c, path.Join(imageAPIPath, identifier))
}

// CreateImage creates a new resource from the supplied option map.
//
// It takes an instance of ImageOptions. Not all attributes can be
// specified at create time (such as ID, which is allocated for you).
func (c *Client) CreateImage(ctx context.Context, newImage ImageOptions) (*Image, error) {
	return apiPost[Image](ctx, c, imageAPIPath, newImage)
}

// UpdateImage updates an existing resources's attributes. Not all
// attributes can be changed (such as ID).
//
// It takes an instance of ImageOptions. Specify the resource you
// want to update using the ID field.
func (c *Client) UpdateImage(ctx context.Context, updateImage ImageOptions) (*Image, error) {
	return apiPut[Image](ctx, c, path.Join(imageAPIPath, updateImage.ID), updateImage)
}

// DestroyImage destroys an existing resource.
func (c *Client) DestroyImage(ctx context.Context, identifier string) (*Image, error) {
	return apiDelete[Image](ctx, c, path.Join(imageAPIPath, identifier))
}

// LockImage locks a resource against destroy requests
func (c *Client) LockImage(ctx context.Context, identifier string) (*Image, error) {
	return apiPut[Image](ctx, c, path.Join(imageAPIPath, identifier, "lock_resource"), nil)
}

// UnlockImage unlocks a resource, re-enabling destroy requests
func (c *Client) UnlockImage(ctx context.Context, identifier string) (*Image, error) {
	return apiPut[Image](ctx, c, path.Join(imageAPIPath, identifier, "unlock_resource"), nil)
}

// CreatedAt implements the CreateDated interface for Image
func (s Image) CreatedAtUnix() int64 {
	return s.CreatedAt.Unix()
}
